labs(title="Pay Comparison by Work Region", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
legend<-get_legend(plot)
plot<-plot+theme(legend.position = "none")
ggdraw(plot_grid(plot_grid(plot, ncol=1, align='v'),
plot_grid(legend, ncol=2),
rel_widths=c(1, 0.5)))
}, height=500)
)
output$plot6<-renderPlot({
plot<-ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Occupation, colour=Occupation))+
geom_point(aes(x=Year, y=Value, group=Occupation, colour=Occupation, shape=Occupation, size=Occupation))+
theme_bw()+
occColours+
occShapes+
occSizes+
labs(title="Pay Comparison by Occupation", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
legend<-get_legend(plot)
plot<-plot+theme(legend.position = "none")
ggdraw(plot_grid(plot_grid(plot, ncol=1, align='v'),
plot_grid(legend, ncol=2),
rel_widths=c(1, 0.5)))
}, height=500)
observeEvent(input$occ_dropdown,
output$plot6<-renderPlot({
plot<-ggplot(dat_occ())+
geom_line(aes(x=Year, y=Value, group=Occupation, colour=Occupation))+
geom_point(aes(x=Year, y=Value, group=Occupation, colour=Occupation, shape=Occupation, size=Occupation))+
theme_bw()+
occColours+
occShapes+
occSizes+
labs(title="Pay Comparison by Occupation", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
legend<-get_legend(plot)
plot<-plot+theme(legend.position = "none")
ggdraw(plot_grid(plot_grid(plot, ncol=1, align='v'),
plot_grid(legend, ncol=2),
rel_widths=c(1, 0.5)))
}, height=500)
)
output$plot7<-renderPlot({
plot<-ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Industry, colour=Industry))+
geom_point(aes(x=Year, y=Value, group=Industry, colour=Industry, shape=Industry, size=Industry))+
theme_bw()+
indColours+
indShapes+
indSizes+
labs(title="Pay Comparison by Industry", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
legend<-get_legend(plot)
plot<-plot+theme(legend.position = "none")
ggdraw(plot_grid(plot_grid(plot, ncol=1, align='v'),
plot_grid(legend, ncol=1),
rel_widths=c(1, 0.5)))
}, height=500)
observeEvent(input$ind_dropdown,
output$plot7<-renderPlot({
plot<-ggplot(dat_ind())+
geom_line(aes(x=Year, y=Value, group=Industry, colour=Industry))+
geom_point(aes(x=Year, y=Value, group=Industry, colour=Industry, shape=Industry, size=Industry))+
theme_bw()+
indColours+
indShapes+
indSizes+
expand_limits(y = 0)+
labs(title="Pay Comparison by Industry", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))+
guides(col=guide_legend(ncol=2,byrow=TRUE))
legend<-get_legend(plot)
plot<-plot+theme(legend.position = "none")
ggdraw(plot_grid(plot_grid(plot, ncol=1, align='v'),
plot_grid(legend, ncol=1),
rel_widths=c(1, 0.5)))
}, height=500)
)
}
# Run the application
shinyApp(ui = ui, server = server)
```
all_data<-read.csv("Data/final_data.csv", fileEncoding = "UTF-8-BOM")
paygap_data<-all_data %>%
filter(Units %in% c("Disability pay gap (%)", "Ethnicity pay gap (%)", "Gender pay gap (%)"))
comparison_data<-all_data %>%
filter(Units=="Median")
#test<-read.csv("Data/paygapdata.csv", fileEncoding = "UTF-8-BOM")
#test2<-read.csv("Data/compare_dataset.csv", fileEncoding = "UTF-8-BOM")
#paygap_data[paygap_data==""]<-"Total"
#comparison_data[comparison_data==""]<-"Total"
#comparison_data$Value<-as.numeric(comparison_data$Value)
available_breakdowns_gender<-list("Working pattern"="WorkingPattern", "Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation")
available_breakdowns_ethnicity<-list("Ethnicity"="Ethnicity")
available_breakdowns_disability<-list("Working pattern"="WorkingPattern", "Sex"="Sex","Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation", "Ethnicity"="Ethnicity", "Impairment")
available_breakdowns<-list("Gender pay gap (%)"=available_breakdowns_gender,
"Ethnicity pay gap (%)"=available_breakdowns_ethnicity,
"Disability pay gap (%)"=available_breakdowns_disability)
total_data<-comparison_data %>%
filter_at(vars(names(comparison_data)[!names(comparison_data) %in% c("Year", "Value", "Units", "comment")]), all_vars(.=="Total"))
shape_set<-c(16,16,16,16,16,16,
17,17,17,17,17,17,
15,15,15,15,15,15,
18,18,18,18,18,18)
create_shape_set<-function(dataset, colname){
shapes<-head(shape_set, length(levels(as.factor(comparison_data[[colname]])))-1)
names(shapes)<-levels(as.factor(comparison_data[[colname]]))[levels(as.factor(comparison_data[[colname]]))!="Total"]
shapes[["Total"]]<-16
shapeScale<-scale_shape_manual(name = colname ,values = shapes, labels = function(x) str_wrap(x, width = 27))
return(shapeScale)
}
create_size_set<-function(dataset, colname){
sizes<-head(c(rep(3, times = 18), rep(4, times=6)), length(levels(as.factor(comparison_data[[colname]])))-1)
names(sizes)<-levels(as.factor(comparison_data[[colname]]))[levels(as.factor(comparison_data[[colname]]))!="Total"]
sizes[["Total"]]<-3
sizeScale<-scale_size_manual(name = colname ,values = sizes, labels = function(x) str_wrap(x, width = 27))
return(sizeScale)
}
colour_set<-c('#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6')
create_colour_set<-function(dataset, colname){
colours<-head(colour_set, length(levels(as.factor(comparison_data[[colname]])))-1)
names(colours)<-levels(as.factor(comparison_data[[colname]]))[levels(as.factor(comparison_data[[colname]]))!="Total"]
colours[["Total"]]<-"#00006A"
colScale<-scale_colour_manual(name = colname ,values = colours, labels = function(x) str_wrap(x, width = 27))
return(colScale)
}
sexColours <- create_colour_set(comparison_data, "Sex")
ageColours <- create_colour_set(comparison_data, "AgeGroup")
wpColours <- create_colour_set(comparison_data, "WorkingPattern")
occColours <- create_colour_set(comparison_data, "Occupation")
wrColours <- create_colour_set(comparison_data, "WorkRegion")
indColours <- create_colour_set(comparison_data, "Industry")
sexShapes <- create_shape_set(comparison_data, "Sex")
ageShapes <- create_shape_set(comparison_data, "AgeGroup")
wpShapes <- create_shape_set(comparison_data, "WorkingPattern")
occShapes <- create_shape_set(comparison_data, "Occupation")
wrShapes <- create_shape_set(comparison_data, "WorkRegion")
indShapes <- create_shape_set(comparison_data, "Industry")
sexSizes <- create_size_set(comparison_data, "Sex")
ageSizes <- create_size_set(comparison_data, "AgeGroup")
wpSizes <- create_size_set(comparison_data, "WorkingPattern")
occSizes <- create_size_set(comparison_data, "Occupation")
wrSizes <- create_size_set(comparison_data, "WorkRegion")
indSizes <- create_size_set(comparison_data, "Industry")
View(total_data)
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex, shape=Sex, size=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
total_data$Sex
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex))+
theme_bw()+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
sexSizes <- create_size_set(total_data, "Sex")
# specify working directory
workingdir<-"C:/Users/3567890/Documents/Uni/Year 2/Semester 2/Data Visualisation/DALT7016_Data_Visualisation"
# set working directory - specified earlier
setwd(workingdir)
required_packages<-c("shiny", "shinydashboard", "shinyWidgets", "ggplot2", "dplyr", "stringr", "RColorBrewer")
for (package in required_packages){
if (!(package %in% installed.packages()[, "Package"])){
install.packages(package)
}
}
# Load libraries
lapply(required_packages, library, character.only = TRUE)
if (file.exists("Data/final_data.csv")==FALSE){
source("collate_data.R")
# reset working
workingdir<-"C:/Users/3567890/Documents/Uni/Year 2/Semester 2/Data Visualisation/DALT7016_Data_Visualisation"
setwd(workingdir)
}
all_data<-read.csv("Data/final_data.csv", fileEncoding = "UTF-8-BOM")
paygap_data<-all_data %>%
filter(Units %in% c("Disability pay gap (%)", "Ethnicity pay gap (%)", "Gender pay gap (%)"))
comparison_data<-all_data %>%
filter(Units=="Median")
#test<-read.csv("Data/paygapdata.csv", fileEncoding = "UTF-8-BOM")
#test2<-read.csv("Data/compare_dataset.csv", fileEncoding = "UTF-8-BOM")
#paygap_data[paygap_data==""]<-"Total"
#comparison_data[comparison_data==""]<-"Total"
#comparison_data$Value<-as.numeric(comparison_data$Value)
available_breakdowns_gender<-list("Working pattern"="WorkingPattern", "Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation")
available_breakdowns_ethnicity<-list("Ethnicity"="Ethnicity")
available_breakdowns_disability<-list("Working pattern"="WorkingPattern", "Sex"="Sex","Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation", "Ethnicity"="Ethnicity", "Impairment")
available_breakdowns<-list("Gender pay gap (%)"=available_breakdowns_gender,
"Ethnicity pay gap (%)"=available_breakdowns_ethnicity,
"Disability pay gap (%)"=available_breakdowns_disability)
total_data<-comparison_data %>%
filter_at(vars(names(comparison_data)[!names(comparison_data) %in% c("Year", "Value", "Units", "comment")]), all_vars(.=="Total"))
shape_set<-c(16,16,16,16,16,16,
17,17,17,17,17,17,
15,15,15,15,15,15,
18,18,18,18,18,18)
create_shape_set<-function(dataset, colname){
shapes<-head(shape_set, length(levels(as.factor(comparison_data[[colname]])))-1)
names(shapes)<-levels(as.factor(comparison_data[[colname]]))[levels(as.factor(comparison_data[[colname]]))!="Total"]
shapes[["Total"]]<-16
shapeScale<-scale_shape_manual(name = colname ,values = shapes, labels = function(x) str_wrap(x, width = 27))
return(shapeScale)
}
create_size_set<-function(dataset, colname){
sizes<-head(c(rep(3, times = 18), rep(4, times=6)), length(levels(as.factor(comparison_data[[colname]])))-1)
names(sizes)<-levels(as.factor(comparison_data[[colname]]))[levels(as.factor(comparison_data[[colname]]))!="Total"]
sizes[["Total"]]<-3
sizeScale<-scale_size_manual(name = colname ,values = sizes, labels = function(x) str_wrap(x, width = 27))
return(sizeScale)
}
colour_set<-c('#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6')
create_colour_set<-function(dataset, colname){
colours<-head(colour_set, length(levels(as.factor(comparison_data[[colname]])))-1)
names(colours)<-levels(as.factor(comparison_data[[colname]]))[levels(as.factor(comparison_data[[colname]]))!="Total"]
colours[["Total"]]<-"#00006A"
colScale<-scale_colour_manual(name = colname ,values = colours, labels = function(x) str_wrap(x, width = 27))
return(colScale)
}
sexColours <- create_colour_set(total_data, "Sex")
ageColours <- create_colour_set(comparison_data, "AgeGroup")
wpColours <- create_colour_set(comparison_data, "WorkingPattern")
occColours <- create_colour_set(comparison_data, "Occupation")
wrColours <- create_colour_set(comparison_data, "WorkRegion")
indColours <- create_colour_set(comparison_data, "Industry")
sexShapes <- create_shape_set(total_data, "Sex")
ageShapes <- create_shape_set(comparison_data, "AgeGroup")
wpShapes <- create_shape_set(comparison_data, "WorkingPattern")
occShapes <- create_shape_set(comparison_data, "Occupation")
wrShapes <- create_shape_set(comparison_data, "WorkRegion")
indShapes <- create_shape_set(comparison_data, "Industry")
sexSizes <- create_size_set(total_data, "Sex")
ageSizes <- create_size_set(comparison_data, "AgeGroup")
wpSizes <- create_size_set(comparison_data, "WorkingPattern")
occSizes <- create_size_set(comparison_data, "Occupation")
wrSizes <- create_size_set(comparison_data, "WorkRegion")
indSizes <- create_size_set(comparison_data, "Industry")
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
View(sexShapes)
View(sexColours)
View(sexSizes)
# specify working directory
workingdir<-"C:/Users/3567890/Documents/Uni/Year 2/Semester 2/Data Visualisation/DALT7016_Data_Visualisation"
# set working directory - specified earlier
setwd(workingdir)
required_packages<-c("shiny", "shinydashboard", "shinyWidgets", "ggplot2", "dplyr", "stringr", "RColorBrewer")
for (package in required_packages){
if (!(package %in% installed.packages()[, "Package"])){
install.packages(package)
}
}
# Load libraries
lapply(required_packages, library, character.only = TRUE)
if (file.exists("Data/final_data.csv")==FALSE){
source("collate_data.R")
# reset working
workingdir<-"C:/Users/3567890/Documents/Uni/Year 2/Semester 2/Data Visualisation/DALT7016_Data_Visualisation"
setwd(workingdir)
}
all_data<-read.csv("Data/final_data.csv", fileEncoding = "UTF-8-BOM")
paygap_data<-all_data %>%
filter(Units %in% c("Disability pay gap (%)", "Ethnicity pay gap (%)", "Gender pay gap (%)"))
comparison_data<-all_data %>%
filter(Units=="Median")
#test<-read.csv("Data/paygapdata.csv", fileEncoding = "UTF-8-BOM")
#test2<-read.csv("Data/compare_dataset.csv", fileEncoding = "UTF-8-BOM")
#paygap_data[paygap_data==""]<-"Total"
#comparison_data[comparison_data==""]<-"Total"
#comparison_data$Value<-as.numeric(comparison_data$Value)
available_breakdowns_gender<-list("Working pattern"="WorkingPattern", "Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation")
available_breakdowns_ethnicity<-list("Ethnicity"="Ethnicity")
available_breakdowns_disability<-list("Working pattern"="WorkingPattern", "Sex"="Sex","Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation", "Ethnicity"="Ethnicity", "Impairment")
available_breakdowns<-list("Gender pay gap (%)"=available_breakdowns_gender,
"Ethnicity pay gap (%)"=available_breakdowns_ethnicity,
"Disability pay gap (%)"=available_breakdowns_disability)
total_data<-comparison_data %>%
filter_at(vars(names(comparison_data)[!names(comparison_data) %in% c("Year", "Value", "Units", "comment")]), all_vars(.=="Total"))
shape_set<-c(16,16,16,16,16,16,
17,17,17,17,17,17,
15,15,15,15,15,15,
18,18,18,18,18,18)
create_shape_set<-function(dataset, colname){
shapes<-head(shape_set, length(levels(as.factor(dataset[[colname]])))-1)
names(shapes)<-levels(as.factor(dataset[[colname]]))[levels(as.factor(dataset[[colname]]))!="Total"]
shapes[["Total"]]<-16
shapeScale<-scale_shape_manual(name = colname ,values = shapes, labels = function(x) str_wrap(x, width = 27))
return(shapeScale)
}
create_size_set<-function(dataset, colname){
sizes<-head(c(rep(3, times = 18), rep(4, times=6)), length(levels(as.factor(dataset[[colname]])))-1)
names(sizes)<-levels(as.factor(dataset[[colname]]))[levels(as.factor(dataset[[colname]]))!="Total"]
sizes[["Total"]]<-3
sizeScale<-scale_size_manual(name = colname ,values = sizes, labels = function(x) str_wrap(x, width = 27))
return(sizeScale)
}
colour_set<-c('#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6')
create_colour_set<-function(dataset, colname){
colours<-head(colour_set, length(levels(as.factor(dataset[[colname]])))-1)
names(colours)<-levels(as.factor(dataset[[colname]]))[levels(as.factor(dataset[[colname]]))!="Total"]
colours[["Total"]]<-"#00006A"
colScale<-scale_colour_manual(name = colname ,values = colours, labels = function(x) str_wrap(x, width = 27))
return(colScale)
}
sexColours <- create_colour_set(total_data, "Sex")
ageColours <- create_colour_set(comparison_data, "AgeGroup")
wpColours <- create_colour_set(comparison_data, "WorkingPattern")
occColours <- create_colour_set(comparison_data, "Occupation")
wrColours <- create_colour_set(comparison_data, "WorkRegion")
indColours <- create_colour_set(comparison_data, "Industry")
sexShapes <- create_shape_set(total_data, "Sex")
ageShapes <- create_shape_set(comparison_data, "AgeGroup")
wpShapes <- create_shape_set(comparison_data, "WorkingPattern")
occShapes <- create_shape_set(comparison_data, "Occupation")
wrShapes <- create_shape_set(comparison_data, "WorkRegion")
indShapes <- create_shape_set(comparison_data, "Industry")
sexSizes <- create_size_set(total_data, "Sex")
ageSizes <- create_size_set(comparison_data, "AgeGroup")
wpSizes <- create_size_set(comparison_data, "WorkingPattern")
occSizes <- create_size_set(comparison_data, "Occupation")
wrSizes <- create_size_set(comparison_data, "WorkRegion")
indSizes <- create_size_set(comparison_data, "Industry")
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
runApp('dashboard.R')
runApp('dashboard.R')
View(create_colour_set)
runApp('dashboard.R')
# specify working directory
workingdir<-"C:/Users/3567890/Documents/Uni/Year 2/Semester 2/Data Visualisation/DALT7016_Data_Visualisation"
# set working directory - specified earlier
setwd(workingdir)
required_packages<-c("shiny", "shinydashboard", "shinyWidgets", "ggplot2", "dplyr", "stringr", "RColorBrewer")
for (package in required_packages){
if (!(package %in% installed.packages()[, "Package"])){
install.packages(package)
}
}
# Load libraries
lapply(required_packages, library, character.only = TRUE)
if (file.exists("Data/final_data.csv")==FALSE){
source("collate_data.R")
# reset working
workingdir<-"C:/Users/3567890/Documents/Uni/Year 2/Semester 2/Data Visualisation/DALT7016_Data_Visualisation"
setwd(workingdir)
}
all_data<-read.csv("Data/final_data.csv", fileEncoding = "UTF-8-BOM")
paygap_data<-all_data %>%
filter(Units %in% c("Disability pay gap (%)", "Ethnicity pay gap (%)", "Gender pay gap (%)"))
comparison_data<-all_data %>%
filter(Units=="Median")
#test<-read.csv("Data/paygapdata.csv", fileEncoding = "UTF-8-BOM")
#test2<-read.csv("Data/compare_dataset.csv", fileEncoding = "UTF-8-BOM")
#paygap_data[paygap_data==""]<-"Total"
#comparison_data[comparison_data==""]<-"Total"
#comparison_data$Value<-as.numeric(comparison_data$Value)
available_breakdowns_gender<-list("Working pattern"="WorkingPattern", "Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation")
available_breakdowns_ethnicity<-list("Ethnicity"="Ethnicity")
available_breakdowns_disability<-list("Working pattern"="WorkingPattern", "Sex"="Sex","Age group"="AgeGroup",
"Work region"="WorkRegion", "Occupation"="Occupation", "Ethnicity"="Ethnicity", "Impairment")
available_breakdowns<-list("Gender pay gap (%)"=available_breakdowns_gender,
"Ethnicity pay gap (%)"=available_breakdowns_ethnicity,
"Disability pay gap (%)"=available_breakdowns_disability)
total_data<-comparison_data %>%
filter_at(vars(names(comparison_data)[!names(comparison_data) %in% c("Year", "Value", "Units", "comment")]), all_vars(.=="Total"))
shape_set<-c(16,16,16,16,16,16,
17,17,17,17,17,17,
15,15,15,15,15,15,
18,18,18,18,18,18)
create_shape_set<-function(dataset, colname){
shapes<-head(shape_set, length(levels(as.factor(dataset[[colname]])))-1)
names(shapes)<-levels(as.factor(dataset[[colname]]))[levels(as.factor(dataset[[colname]]))!="Total"]
shapes[["Total"]]<-16
shapeScale<-scale_shape_manual(name = colname ,values = shapes, labels = function(x) str_wrap(x, width = 27))
return(shapeScale)
}
create_size_set<-function(dataset, colname){
sizes<-head(c(rep(3, times = 18), rep(4, times=6)), length(levels(as.factor(dataset[[colname]])))-1)
names(sizes)<-levels(as.factor(dataset[[colname]]))[levels(as.factor(dataset[[colname]]))!="Total"]
sizes[["Total"]]<-3
sizeScale<-scale_size_manual(name = colname ,values = sizes, labels = function(x) str_wrap(x, width = 27))
return(sizeScale)
}
colour_set<-c('#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6',
'#cd7a00', '#339966', '#9966cc', '#8d4d57', '#A33600', '#054ce6')
create_colour_set<-function(dataset, colname){
colours<-head(colour_set, length(levels(as.factor(dataset[[colname]])))-1)
names(colours)<-levels(as.factor(dataset[[colname]]))[levels(as.factor(dataset[[colname]]))!="Total"]
colours[["Total"]]<-"#00006A"
colScale<-scale_colour_manual(name = colname ,values = colours, labels = function(x) str_wrap(x, width = 27))
return(colScale)
}
sexColours <- create_colour_set(comparison_data, "Sex")
ageColours <- create_colour_set(comparison_data, "AgeGroup")
wpColours <- create_colour_set(comparison_data, "WorkingPattern")
occColours <- create_colour_set(comparison_data, "Occupation")
wrColours <- create_colour_set(comparison_data, "WorkRegion")
indColours <- create_colour_set(comparison_data, "Industry")
sexShapes <- create_shape_set(comparison_data, "Sex")
ageShapes <- create_shape_set(comparison_data, "AgeGroup")
wpShapes <- create_shape_set(comparison_data, "WorkingPattern")
occShapes <- create_shape_set(comparison_data, "Occupation")
wrShapes <- create_shape_set(comparison_data, "WorkRegion")
indShapes <- create_shape_set(comparison_data, "Industry")
sexSizes <- create_size_set(comparison_data, "Sex")
ageSizes <- create_size_set(comparison_data, "AgeGroup")
wpSizes <- create_size_set(comparison_data, "WorkingPattern")
occSizes <- create_size_set(comparison_data, "Occupation")
wrSizes <- create_size_set(comparison_data, "WorkRegion")
indSizes <- create_size_set(comparison_data, "Industry")
ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Sex, colour=Sex))+
geom_point(aes(x=Year, y=Value, group=Sex, colour=Sex))+
theme_bw()+
sexColours+
sexShapes+
sexSizes+
labs(title="Pay Comparison by Sex", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
plot<-ggplot(total_data)+
geom_line(aes(x=Year, y=Value, group=Occupation, colour=Occupation))+
geom_point(aes(x=Year, y=Value, group=Occupation, colour=Occupation, shape=Occupation, size=Occupation))+
theme_bw()+
occColours+
occShapes+
occSizes+
labs(title="Pay Comparison by Occupation", y="Median")+
theme(plot.title = element_text(hjust = 0.5), legend.title = element_blank(),
legend.text = element_text(size = 10), legend.key.size = unit(2,"line"))
runApp('dashboard.R')
runApp('dashboard.R')
runApp('dashboard.R')
runApp('dashboard.R')
runApp('dashboard.R')
